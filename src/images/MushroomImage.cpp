/**
 * @project OpenHoop
 * @file MushroomImage.cpp
 * @brief Source file for the MushroomImage class, representing an image of a mushroom for the Hula Hoop LED display.
 * @details Implements the methods to set colors for the mushroom image.
 * @author github.com/angelcamelot
 * @date 2024-03-17
 * @license Open-source license.
 */

#include "../../include/images/MushroomImage.h"
#include <random>

MushroomImage::MushroomImage(uint32_t color) : LedImage(18, 18) {
    setMushroomColors(color);
}

void MushroomImage::setMushroomColors(uint32_t color) const {
    setPixel(5, 1, 0x000000);
    setPixel(6, 1, 0x000000);
    setPixel(7, 1, 0x000000);
    setPixel(8, 1, 0x000000);
    setPixel(9, 1, 0x000000);
    setPixel(10, 1, 0x000000);
    setPixel(11, 1, 0x000000);
    setPixel(4, 2, 0x000000);
    setPixel(5, 2, 0x000000);
    setPixel(6, 2, color);
    setPixel(7, 2, color);
    setPixel(8, 2, color);
    setPixel(9, 2, color);
    setPixel(10, 2, 0xffffff);
    setPixel(11, 2, 0xffffff);
    setPixel(12, 2, 0x000000);
    setPixel(13, 2, 0x000000);
    setPixel(3, 3, 0x000000);
    setPixel(4, 3, 0xffffff);
    setPixel(5, 3, 0xffffff);
    setPixel(6, 3, color);
    setPixel(7, 3, color);
    setPixel(8, 3, color);
    setPixel(9, 3, color);
    setPixel(10, 3, 0xffffff);
    setPixel(11, 3, 0xffffff);
    setPixel(12, 3, 0xffffff);
    setPixel(13, 3, 0xffffff);
    setPixel(14, 3, 0x000000);
    setPixel(2, 4, 0x000000);
    setPixel(3, 4, 0xffffff);
    setPixel(4, 4, 0xffffff);
    setPixel(5, 4, color);
    setPixel(6, 4, color);
    setPixel(7, 4, color);
    setPixel(8, 4, color);
    setPixel(9, 4, color);
    setPixel(10, 4, color);
    setPixel(11, 4, 0xffffff);
    setPixel(12, 4, 0xffffff);
    setPixel(13, 4, 0xffffff);
    setPixel(14, 4, 0xffffff);
    setPixel(15, 4, 0x000000);
    setPixel(2, 5, 0x000000);
    setPixel(3, 5, 0xffffff);
    setPixel(4, 5, color);
    setPixel(5, 5, color);
    setPixel(6, 5, 0xffffff);
    setPixel(7, 5, 0xffffff);
    setPixel(8, 5, 0xffffff);
    setPixel(9, 5, color);
    setPixel(10, 5, color);
    setPixel(11, 5, color);
    setPixel(12, 5, 0xffffff);
    setPixel(13, 5, 0xffffff);
    setPixel(14, 5, 0xffffff);
    setPixel(15, 5, 0x000000);
    setPixel(1, 6, 0x000000);
    setPixel(2, 6, color);
    setPixel(3, 6, color);
    setPixel(4, 6, color);
    setPixel(5, 6, 0xffffff);
    setPixel(6, 6, 0xffffff);
    setPixel(7, 6, 0xffffff);
    setPixel(8, 6, 0xffffff);
    setPixel(9, 6, 0xffffff);
    setPixel(10, 6, color);
    setPixel(11, 6, color);
    setPixel(12, 6, color);
    setPixel(13, 6, color);
    setPixel(14, 6, color);
    setPixel(15, 6, color);
    setPixel(16, 6, 0x000000);
    setPixel(1, 7, 0x000000);
    setPixel(2, 7, color);
    setPixel(3, 7, color);
    setPixel(4, 7, color);
    setPixel(5, 7, 0xffffff);
    setPixel(6, 7, 0xffffff);
    setPixel(7, 7, 0xffffff);
    setPixel(8, 7, 0xffffff);
    setPixel(9, 7, 0xffffff);
    setPixel(10, 7, color);
    setPixel(11, 7, color);
    setPixel(12, 7, color);
    setPixel(13, 7, 0xffffff);
    setPixel(14, 7, 0xffffff);
    setPixel(15, 7, color);
    setPixel(16, 7, 0x000000);
    setPixel(1, 8, 0x000000);
    setPixel(2, 8, 0xffffff);
    setPixel(3, 8, color);
    setPixel(4, 8, color);
    setPixel(5, 8, 0xffffff);
    setPixel(6, 8, 0xffffff);
    setPixel(7, 8, 0xffffff);
    setPixel(8, 8, 0xffffff);
    setPixel(9, 8, 0xffffff);
    setPixel(10, 8, color);
    setPixel(11, 8, color);
    setPixel(12, 8, 0xffffff);
    setPixel(13, 8, 0xffffff);
    setPixel(14, 8, 0xffffff);
    setPixel(15, 8, 0xffffff);
    setPixel(16, 8, 0x000000);
    setPixel(1, 9, 0x000000);
    setPixel(2, 9, 0xffffff);
    setPixel(3, 9, 0xffffff);
    setPixel(4, 9, color);
    setPixel(5, 9, color);
    setPixel(6, 9, 0xffffff);
    setPixel(7, 9, 0xffffff);
    setPixel(8, 9, 0xffffff);
    setPixel(9, 9, color);
    setPixel(10, 9, color);
    setPixel(11, 9, color);
    setPixel(12, 9, 0xffffff);
    setPixel(13, 9, 0xffffff);
    setPixel(14, 9, 0xffffff);
    setPixel(15, 9, 0xffffff);
    setPixel(16, 9, 0x000000);
    setPixel(1, 10, 0x000000);
    setPixel(2, 10, 0xffffff);
    setPixel(3, 10, 0xffffff);
    setPixel(4, 10, color);
    setPixel(5, 10, color);
    setPixel(6, 10, color);
    setPixel(7, 10, color);
    setPixel(8, 10, color);
    setPixel(9, 10, color);
    setPixel(10, 10, color);
    setPixel(11, 10, color);
    setPixel(12, 10, color);
    setPixel(13, 10, 0xffffff);
    setPixel(14, 10, 0xffffff);
    setPixel(15, 10, color);
    setPixel(16, 10, 0x000000);
    setPixel(1, 11, 0x000000);
    setPixel(2, 11, 0xffffff);
    setPixel(3, 11, color);
    setPixel(4, 11, color);
    setPixel(5, 11, 0x000000);
    setPixel(6, 11, 0x000000);
    setPixel(7, 11, 0x000000);
    setPixel(8, 11, 0x000000);
    setPixel(9, 11, 0x000000);
    setPixel(10, 11, 0x000000);
    setPixel(11, 11, 0x000000);
    setPixel(12, 11, 0x000000);
    setPixel(13, 11, color);
    setPixel(14, 11, color);
    setPixel(15, 11, color);
    setPixel(16, 11, 0x000000);
    setPixel(2, 12, 0x000000);
    setPixel(3, 12, 0x000000);
    setPixel(4, 12, 0x000000);
    setPixel(5, 12, 0xffd5ab);
    setPixel(6, 12, 0xffd5ab);
    setPixel(7, 12, 0x000000);
    setPixel(8, 12, 0xffd5ab);
    setPixel(9, 12, 0xffd5ab);
    setPixel(10, 12, 0x000000);
    setPixel(11, 12, 0xffd5ab);
    setPixel(12, 12, 0xffd5ab);
    setPixel(13, 12, 0x000000);
    setPixel(14, 12, 0x000000);
    setPixel(15, 12, 0x000000);
    setPixel(3, 13, 0x000000);
    setPixel(4, 13, 0xffd5ab);
    setPixel(5, 13, 0xffd5ab);
    setPixel(6, 13, 0xffd5ab);
    setPixel(7, 13, 0x000000);
    setPixel(8, 13, 0xffd5ab);
    setPixel(9, 13, 0xffd5ab);
    setPixel(10, 13, 0x000000);
    setPixel(11, 13, 0xffd5ab);
    setPixel(12, 13, 0xffd5ab);
    setPixel(13, 13, 0xffd5ab);
    setPixel(14, 13, 0x000000);
    setPixel(3, 14, 0x000000);
    setPixel(4, 14, 0xffd5ab);
    setPixel(5, 14, 0xffd5ab);
    setPixel(6, 14, 0xffd5ab);
    setPixel(7, 14, 0xffd5ab);
    setPixel(8, 14, 0xffd5ab);
    setPixel(9, 14, 0xffd5ab);
    setPixel(10, 14, 0xffd5ab);
    setPixel(11, 14, 0xffd5ab);
    setPixel(12, 14, 0xffd5ab);
    setPixel(13, 14, 0xffd5ab);
    setPixel(14, 14, 0x000000);
    setPixel(4, 15, 0x000000);
    setPixel(5, 15, 0xffd5ab);
    setPixel(6, 15, 0xffd5ab);
    setPixel(7, 15, 0xffd5ab);
    setPixel(8, 15, 0xffd5ab);
    setPixel(9, 15, 0xffd5ab);
    setPixel(10, 15, 0xffd5ab);
    setPixel(11, 15, 0xffd5ab);
    setPixel(12, 15, 0xffd5ab);
    setPixel(13, 15, 0x000000);
    setPixel(5, 16, 0x000000);
    setPixel(6, 16, 0x000000);
    setPixel(7, 16, 0x000000);
    setPixel(8, 16, 0x000000);
    setPixel(9, 16, 0x000000);
    setPixel(10, 16, 0x000000);
    setPixel(11, 16, 0x000000);
    setPixel(12, 16, 0x000000);
}

uint32_t MushroomImage::getRandomColor() {
    static std::mt19937 generator(std::random_device{}());
    std::uniform_int_distribution<int> distribution(0, 4);
    const uint32_t mushroomColors[] = {0xFF0000, 0x00FF00, 0xFFFF00, 0x800080, 0xFFD700};
    int randomIndex = distribution(generator);
    return mushroomColors[randomIndex];
}
